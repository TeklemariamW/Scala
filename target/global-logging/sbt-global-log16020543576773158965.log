[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Weldehawariat\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Weldehawariat\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 22.0.1)
[debug] Load.defaultLoad until apply took 127.9653ms
[debug]           Load.loadUnit: plugins took 108.1792ms
[debug]           Load.loadUnit: defsScala took 0.2664ms
[debug] [Loading] Scanning directory C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala\project
[debug]             Load.loadUnit: mkEval took 6.7923ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.8628 ms
[info] loading settings for project scala-build from idea.sbt ...
[debug]               Load.resolveProject(scala-build) took 51.0701ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala\project, plugins: List(<none>))) took 84.5353ms
[debug] [Loading] Done in C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3003.2497ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.5934ms
[debug]         Load.loadUnit(file:/C:/Users/Weldehawariat/Documents/Training/Projects/Scala/Scala/project/, ...) took 3127.3707ms
[debug]       Load.apply: load took 3294.0587ms
[debug]       Load.apply: resolveProjects took 6.6358ms
[debug]       Load.apply: finalTransforms took 90.9316ms
[debug]       Load.apply: config.delegates took 18.2515ms
[debug]       Load.apply: Def.make(settings)... took 503.2268ms
[debug]       Load.apply: structureIndex took 113.795ms
[debug]       Load.apply: mkStreams took 2.0312ms
[info] loading project definition from C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6561.542ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala
[debug]       Load.loadUnit: mkEval took 0.2641ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2937 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 44.9184ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala, plugins: List(<none>))) took 50.4265ms
[debug] [Loading] Done in C:\Users\Weldehawariat\Documents\Training\Projects\Scala\Scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2022.5397ms
[debug]     Load.loadUnit: cleanEvalClasses took 47.0187ms
[debug]   Load.loadUnit(file:/C:/Users/Weldehawariat/Documents/Training/Projects/Scala/Scala/, ...) took 8634.0538ms
[debug] Load.apply: load took 8661.0537ms
[debug] Load.apply: resolveProjects took 0.1412ms
[debug] Load.apply: finalTransforms took 59.0593ms
[debug] Load.apply: config.delegates took 0.9615ms
[debug] Load.apply: Def.make(settings)... took 146.0194ms
[debug] Load.apply: structureIndex took 41.0475ms
[debug] Load.apply: mkStreams took 0.0048ms
[info] set current project to Scala (in build file:/C:/Users/Weldehawariat/Documents/Training/Projects/Scala/Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53875 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53875, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala (in build file:/C:/Users/Weldehawariat/Documents/Training/Projects/Scala/Scala/)
[debug] > Exec(idea-shell, None, None)
